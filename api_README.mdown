# Taiwan Company's Network Rest API

## Company network

Return Company network with node, edge informations

1. Query by **company id**

    Syntax: url/com?id=&maxlvl=&lineunit=

    Input:

    * id: company id
    * maxlvl: (Optional) max levels
    * lineunit: (Optional) can be 'seat'' or 'seatratio', Default=seat

    Output:

    * node size: normalize of degree centrality
    * node color: cluster of betweeness centrality
    * link width: number of seats


2. Query by **boss name**

    Sytax: url/com?boss=&target=&lineunit=

    Input:

    * boss: boss name
    * target: (Optional) boss target
    * lineunit: (Optional) can be 'seat'' or 'seatratio', Default=seat

    Output:

    * node size: normalize of degree centrality
    * node color: 各公司依不同董監事 target 給定不同顏色，其餘的公司另給定顏色
    * link width: number of seats


3. Query by **boards of the same company**

    Syntax: url/com?comboss=&maxlvl=&lineunit=

    Input:

    * comboss: company id
    * maxlvl: (Optional) max levels
    * lineunit: (Optional) line width, can be one of ['seat', 'seatratio']. Default = seat

    Output:

    * node size: normalize of degree centrality
    * node color: 各公司董監事成員中，與被查詢公司董監事重複者給定一顏色; 其餘公司另給定顏色。
    * link width: 
        seat: number of seats,
        seatratio: seat ratio


4. Query by **address of the company**

    Syntax: url/com?comaddr=&maxlvl=&lineunit=

    Input:

    * comaddr: company id
    * maxlvl: (Optional) max levels
    * lineunit: (Optional) can be 'seat'' or 'seatratio', Default=seat

    Output:

    * node size: normalize of degree centrality
    * node color: 與被查詢公司相同地址者給定一顏色。其餘公司另給定顏色。
    * link width: number of seats


## Boss network

1. Query by **company id**

    Syntax: url/boss?id=&maxlvl=

    Input:

    * id: company id
    * maxlvl: (Optional) max levels

    Output:

    * node size: 董監事頭銜數
    * node color: cluster of betweeness centrality
    * link width: number of (intersection of companys)


## 排行榜查詢

Syntax: url/rank?data=&rankby=&n=

Input:

    data, rankby: see next subsection "Ranking type"
    n: The first n ranks

Output:

    list of ranks


### Ranking type

====== ========= =========================
data   rankby    Description
====== ========= =========================
twcom  ivst      公司直接投資數排名
twcom  sons      公司子孫數排名
twcom  bosscoms  董監事任職公司數排名
twcom  inst      董監事擔任法人代表數排名
twcom  capital   公司資本額排名
twcom  capital   財團/社團法人資本額排名
====== ========= =========================


## Query for else

1. Query boss by similar name (in SQL: "name like '%boss%'")

    Syntax: url/query?boss=<boss name>

    Input: boss name

    Output:

        dict of different group of bosses, {target: [companys]}


2. Query company name and id by similar company name (in SQL: "name like '%name%'")

    Syntax: url/query?com=<company name>

    Input: company name

    Output:

        dict of companys, {id: name}


3. Query board list by company id

    Syntax: url/query?board=<id>

    Input: id

    Ouput:

        board list of one company
