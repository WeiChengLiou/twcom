# Taiwan Company's Network Rest API

## Company network

Return Company network with node, edge informations

1. Query by **company id**

    Syntax: url/com?id=&maxlvl=

    Input:

    * id: company id
    * maxlvl: max levels

    Output:

    * node size: normalize of degree centrality
    * node color: cluster of betweeness centrality
    * link width: number of seats


2. Query by **boss name**

    Sytax: url/com?boss=&target=

    Input:

    * boss: boss name
    * target: (Optional) boss target

    Output:

    * node size: normalize of degree centrality
    * node color: cluster of betweeness centrality
    * link width: number of seats


3. Query by **boards of the same company**

    Syntax:

        url/com?comboss=&maxlvl=

    Input:

        comboss: company id
        maxlvl: max levels

    Output:

        company network with node, edge informations


5. Query by **address of the company**

    Syntax:

        url/com?comaddr=&maxlvl=

    Input:

        comaddr: company id
        maxlvl: max levels

    Output:

        company network with node, edge informations


## Boss network

2. Query by **company id**

    Syntax:

        url/boss?id=&maxlvl=

    Input:

        id: company id
        maxlvl: max levels

    Output:

        Boss network with node, edge informations


## Query for else

1. Query boss by similar name (in SQL: "name like '%boss%'")

    Syntax: url/query/boss/<boss name>

    Input: boss name

    Output:

        dict of different group of bosses, {target: [companys]}


2. Query company name and id by similar company name (in SQL: "name like '%name%'")

    Syntax: url/query/com/<company name>

    Input: company name

    Output:

        dict of companys, {id: name}


3. Query board list by company id

    Syntax: url/query/board/<id>

    Input: id

    Oouput:

        board list of one company
